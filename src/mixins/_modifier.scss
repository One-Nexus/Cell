/// Create a modifier for a module
///
/// @param {string|list} $modifiers  - The modifier(s) which you wish to create
/// @param {bool} $glue ['--'] - Desired modifier separator/glue
/// @param {string} $module
@mixin modifier($modifiers, $glue: $modifierGlue, $module: $module) {
  $scope: &;
  $namespace: get-namespace(&);
  $modifiers-chunk: ();

  // remove root selector chunks from selector
  @if str-index(inspect(&), '.#{$namespace},') {
    $scope: ();

    @for $i from 1 through length(&) {
      @if $i % 2 == 0 {
        $scope: append($scope, nth(&, $i), comma);
      }
    }
  }

  @each $modifier in $modifiers {
    $modifiers-chunk: join($modifiers-chunk, '[class*="#{$glue}#{$modifier}"]', comma);

    $selector: #{$scope}#{$modifiers-chunk};

    // pseudo-elements must be at the end
    $selector: shift-pseudo-elements($selector);

    @at-root #{$selector} {
      @content;
    }
  }
}

/// Alias for modifier() mixin
@mixin modifiers($args...) {
  @include modifier($args...) {
    @content;
  }
}

/// Alias for modifier() mixin
@mixin is($args...) {
  @include modifier($args...) {
    @content;
  }
}