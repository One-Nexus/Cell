/// Create a modifier for a module
///
/// @param {string|list} $modifiers  - The modifier(s) which you wish to create
/// @param {string} $special [null] - Add special contextual options to modifier
/// @param {bool} $glue ['--'] - Desired modifier separator/glue
///
/// @example
///   @include module('button') {
///     @include modifier('large') {
///       ...
///     }
///   }
@mixin modifier($modifiers, $special: null, $glue: $modifierGlue, $module: $module) {
  $selectors: &;

  @if str-index(inspect(&), '.#{$module}') {
    $selectors: ();

    @for $i from 1 through length(&) {
      @if $i % 2 == 0 {
        $selectors: append($selectors, nth(&, $i), comma);
      }
    }
  }

  @at-root #{$selectors} {
    $modifier-selectors: ();

    @each $modifier in $modifiers {
      @if $special == 'not' {
        $modifier-selectors: join($modifier-selectors, '&:not([class*="#{$glue}#{$modifier}"])', comma);
      }
      @else {
        $modifier-selectors: join($modifier-selectors, '&[class*="#{$glue}#{$modifier}"]', comma);
      }
    }

    @at-root #{$modifier-selectors} {
      @content;
    }
  }
}

/// Alias for modifier() mixin
@mixin modifiers($args...) {
  @include modifier($args...) {
    @content;
  }
}

/// Alias for modifier() mixin
@mixin is($args...) {
  @include modifier($args...) {
    @content;
  }
}